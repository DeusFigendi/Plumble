/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.morlunk.mumbleclient.swig.speex;

public interface SpeexConstants {
  public final static int __EMX__ = SpeexJNI.__EMX___get();
  public final static int SPEEX_SET_ENH = SpeexJNI.SPEEX_SET_ENH_get();
  public final static int SPEEX_GET_ENH = SpeexJNI.SPEEX_GET_ENH_get();
  public final static int SPEEX_GET_FRAME_SIZE = SpeexJNI.SPEEX_GET_FRAME_SIZE_get();
  public final static int SPEEX_SET_QUALITY = SpeexJNI.SPEEX_SET_QUALITY_get();
  public final static int SPEEX_SET_MODE = SpeexJNI.SPEEX_SET_MODE_get();
  public final static int SPEEX_GET_MODE = SpeexJNI.SPEEX_GET_MODE_get();
  public final static int SPEEX_SET_LOW_MODE = SpeexJNI.SPEEX_SET_LOW_MODE_get();
  public final static int SPEEX_GET_LOW_MODE = SpeexJNI.SPEEX_GET_LOW_MODE_get();
  public final static int SPEEX_SET_HIGH_MODE = SpeexJNI.SPEEX_SET_HIGH_MODE_get();
  public final static int SPEEX_GET_HIGH_MODE = SpeexJNI.SPEEX_GET_HIGH_MODE_get();
  public final static int SPEEX_SET_VBR = SpeexJNI.SPEEX_SET_VBR_get();
  public final static int SPEEX_GET_VBR = SpeexJNI.SPEEX_GET_VBR_get();
  public final static int SPEEX_SET_VBR_QUALITY = SpeexJNI.SPEEX_SET_VBR_QUALITY_get();
  public final static int SPEEX_GET_VBR_QUALITY = SpeexJNI.SPEEX_GET_VBR_QUALITY_get();
  public final static int SPEEX_SET_COMPLEXITY = SpeexJNI.SPEEX_SET_COMPLEXITY_get();
  public final static int SPEEX_GET_COMPLEXITY = SpeexJNI.SPEEX_GET_COMPLEXITY_get();
  public final static int SPEEX_SET_BITRATE = SpeexJNI.SPEEX_SET_BITRATE_get();
  public final static int SPEEX_GET_BITRATE = SpeexJNI.SPEEX_GET_BITRATE_get();
  public final static int SPEEX_SET_HANDLER = SpeexJNI.SPEEX_SET_HANDLER_get();
  public final static int SPEEX_SET_USER_HANDLER = SpeexJNI.SPEEX_SET_USER_HANDLER_get();
  public final static int SPEEX_SET_SAMPLING_RATE = SpeexJNI.SPEEX_SET_SAMPLING_RATE_get();
  public final static int SPEEX_GET_SAMPLING_RATE = SpeexJNI.SPEEX_GET_SAMPLING_RATE_get();
  public final static int SPEEX_RESET_STATE = SpeexJNI.SPEEX_RESET_STATE_get();
  public final static int SPEEX_GET_RELATIVE_QUALITY = SpeexJNI.SPEEX_GET_RELATIVE_QUALITY_get();
  public final static int SPEEX_SET_VAD = SpeexJNI.SPEEX_SET_VAD_get();
  public final static int SPEEX_GET_VAD = SpeexJNI.SPEEX_GET_VAD_get();
  public final static int SPEEX_SET_ABR = SpeexJNI.SPEEX_SET_ABR_get();
  public final static int SPEEX_GET_ABR = SpeexJNI.SPEEX_GET_ABR_get();
  public final static int SPEEX_SET_DTX = SpeexJNI.SPEEX_SET_DTX_get();
  public final static int SPEEX_GET_DTX = SpeexJNI.SPEEX_GET_DTX_get();
  public final static int SPEEX_SET_SUBMODE_ENCODING = SpeexJNI.SPEEX_SET_SUBMODE_ENCODING_get();
  public final static int SPEEX_GET_SUBMODE_ENCODING = SpeexJNI.SPEEX_GET_SUBMODE_ENCODING_get();
  public final static int SPEEX_GET_LOOKAHEAD = SpeexJNI.SPEEX_GET_LOOKAHEAD_get();
  public final static int SPEEX_SET_PLC_TUNING = SpeexJNI.SPEEX_SET_PLC_TUNING_get();
  public final static int SPEEX_GET_PLC_TUNING = SpeexJNI.SPEEX_GET_PLC_TUNING_get();
  public final static int SPEEX_SET_VBR_MAX_BITRATE = SpeexJNI.SPEEX_SET_VBR_MAX_BITRATE_get();
  public final static int SPEEX_GET_VBR_MAX_BITRATE = SpeexJNI.SPEEX_GET_VBR_MAX_BITRATE_get();
  public final static int SPEEX_SET_HIGHPASS = SpeexJNI.SPEEX_SET_HIGHPASS_get();
  public final static int SPEEX_GET_HIGHPASS = SpeexJNI.SPEEX_GET_HIGHPASS_get();
  public final static int SPEEX_GET_ACTIVITY = SpeexJNI.SPEEX_GET_ACTIVITY_get();
  public final static int SPEEX_SET_PF = SpeexJNI.SPEEX_SET_PF_get();
  public final static int SPEEX_GET_PF = SpeexJNI.SPEEX_GET_PF_get();
  public final static int SPEEX_MODE_FRAME_SIZE = SpeexJNI.SPEEX_MODE_FRAME_SIZE_get();
  public final static int SPEEX_SUBMODE_BITS_PER_FRAME = SpeexJNI.SPEEX_SUBMODE_BITS_PER_FRAME_get();
  public final static int SPEEX_LIB_GET_MAJOR_VERSION = SpeexJNI.SPEEX_LIB_GET_MAJOR_VERSION_get();
  public final static int SPEEX_LIB_GET_MINOR_VERSION = SpeexJNI.SPEEX_LIB_GET_MINOR_VERSION_get();
  public final static int SPEEX_LIB_GET_MICRO_VERSION = SpeexJNI.SPEEX_LIB_GET_MICRO_VERSION_get();
  public final static int SPEEX_LIB_GET_EXTRA_VERSION = SpeexJNI.SPEEX_LIB_GET_EXTRA_VERSION_get();
  public final static int SPEEX_LIB_GET_VERSION_STRING = SpeexJNI.SPEEX_LIB_GET_VERSION_STRING_get();
  public final static int SPEEX_NB_MODES = SpeexJNI.SPEEX_NB_MODES_get();
  public final static int SPEEX_MODEID_NB = SpeexJNI.SPEEX_MODEID_NB_get();
  public final static int SPEEX_MODEID_WB = SpeexJNI.SPEEX_MODEID_WB_get();
  public final static int SPEEX_MODEID_UWB = SpeexJNI.SPEEX_MODEID_UWB_get();
  public final static int JITTER_BUFFER_OK = SpeexJNI.JITTER_BUFFER_OK_get();
  public final static int JITTER_BUFFER_MISSING = SpeexJNI.JITTER_BUFFER_MISSING_get();
  public final static int JITTER_BUFFER_INSERTION = SpeexJNI.JITTER_BUFFER_INSERTION_get();
  public final static int JITTER_BUFFER_INTERNAL_ERROR = SpeexJNI.JITTER_BUFFER_INTERNAL_ERROR_get();
  public final static int JITTER_BUFFER_BAD_ARGUMENT = SpeexJNI.JITTER_BUFFER_BAD_ARGUMENT_get();
  public final static int JITTER_BUFFER_SET_MARGIN = SpeexJNI.JITTER_BUFFER_SET_MARGIN_get();
  public final static int JITTER_BUFFER_GET_MARGIN = SpeexJNI.JITTER_BUFFER_GET_MARGIN_get();
  public final static int JITTER_BUFFER_GET_AVAILABLE_COUNT = SpeexJNI.JITTER_BUFFER_GET_AVAILABLE_COUNT_get();
  public final static int JITTER_BUFFER_GET_AVALIABLE_COUNT = SpeexJNI.JITTER_BUFFER_GET_AVALIABLE_COUNT_get();
  public final static int JITTER_BUFFER_SET_DESTROY_CALLBACK = SpeexJNI.JITTER_BUFFER_SET_DESTROY_CALLBACK_get();
  public final static int JITTER_BUFFER_GET_DESTROY_CALLBACK = SpeexJNI.JITTER_BUFFER_GET_DESTROY_CALLBACK_get();
  public final static int JITTER_BUFFER_SET_DELAY_STEP = SpeexJNI.JITTER_BUFFER_SET_DELAY_STEP_get();
  public final static int JITTER_BUFFER_GET_DELAY_STEP = SpeexJNI.JITTER_BUFFER_GET_DELAY_STEP_get();
  public final static int JITTER_BUFFER_SET_CONCEALMENT_SIZE = SpeexJNI.JITTER_BUFFER_SET_CONCEALMENT_SIZE_get();
  public final static int JITTER_BUFFER_GET_CONCEALMENT_SIZE = SpeexJNI.JITTER_BUFFER_GET_CONCEALMENT_SIZE_get();
  public final static int JITTER_BUFFER_SET_MAX_LATE_RATE = SpeexJNI.JITTER_BUFFER_SET_MAX_LATE_RATE_get();
  public final static int JITTER_BUFFER_GET_MAX_LATE_RATE = SpeexJNI.JITTER_BUFFER_GET_MAX_LATE_RATE_get();
  public final static int JITTER_BUFFER_SET_LATE_COST = SpeexJNI.JITTER_BUFFER_SET_LATE_COST_get();
  public final static int JITTER_BUFFER_GET_LATE_COST = SpeexJNI.JITTER_BUFFER_GET_LATE_COST_get();
  public final static int SPEEX_ECHO_GET_FRAME_SIZE = SpeexJNI.SPEEX_ECHO_GET_FRAME_SIZE_get();
  public final static int SPEEX_ECHO_SET_SAMPLING_RATE = SpeexJNI.SPEEX_ECHO_SET_SAMPLING_RATE_get();
  public final static int SPEEX_ECHO_GET_SAMPLING_RATE = SpeexJNI.SPEEX_ECHO_GET_SAMPLING_RATE_get();
  public final static int SPEEX_ECHO_GET_IMPULSE_RESPONSE_SIZE = SpeexJNI.SPEEX_ECHO_GET_IMPULSE_RESPONSE_SIZE_get();
  public final static int SPEEX_ECHO_GET_IMPULSE_RESPONSE = SpeexJNI.SPEEX_ECHO_GET_IMPULSE_RESPONSE_get();
  public final static int SPEEX_RESAMPLER_QUALITY_MAX = SpeexJNI.SPEEX_RESAMPLER_QUALITY_MAX_get();
  public final static int SPEEX_RESAMPLER_QUALITY_MIN = SpeexJNI.SPEEX_RESAMPLER_QUALITY_MIN_get();
  public final static int SPEEX_RESAMPLER_QUALITY_DEFAULT = SpeexJNI.SPEEX_RESAMPLER_QUALITY_DEFAULT_get();
  public final static int SPEEX_RESAMPLER_QUALITY_VOIP = SpeexJNI.SPEEX_RESAMPLER_QUALITY_VOIP_get();
  public final static int SPEEX_RESAMPLER_QUALITY_DESKTOP = SpeexJNI.SPEEX_RESAMPLER_QUALITY_DESKTOP_get();
  public final static int RESAMPLER_ERR_SUCCESS = SpeexJNI.RESAMPLER_ERR_SUCCESS_get();
  public final static int RESAMPLER_ERR_ALLOC_FAILED = SpeexJNI.RESAMPLER_ERR_ALLOC_FAILED_get();
  public final static int RESAMPLER_ERR_BAD_STATE = SpeexJNI.RESAMPLER_ERR_BAD_STATE_get();
  public final static int RESAMPLER_ERR_INVALID_ARG = SpeexJNI.RESAMPLER_ERR_INVALID_ARG_get();
  public final static int RESAMPLER_ERR_PTR_OVERLAP = SpeexJNI.RESAMPLER_ERR_PTR_OVERLAP_get();
  public final static int RESAMPLER_ERR_MAX_ERROR = SpeexJNI.RESAMPLER_ERR_MAX_ERROR_get();

}
